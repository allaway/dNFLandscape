cellwidth=10,cellheight=10,file=fname)
else
pheatmap(tm,annotation_col=data.frame(TissueType=tissueType,Patient=patients),
cellwidth=10,cellheight=10,file=fname)
}
#here are the primary tasks we want to do
main<-function(){
plotClusteredSegmentData(segdata2,'gene','median',100)
#  plotClusteredSegmentData(segdata2,'gene','median',1000)
plotClusteredSegmentData(segdata2,'region','median',100)
#  plotClusteredSegmentData(segdata2,'region','median',1000)
}
install.packages(CNTools, ggbiplot, pheatmap)
install.packages(CNTools, ggbiplot)
install.packages(ggbiplot)
install.packages("CNTools", "ggbiplot", "pheatmap")
install.packages("CNTools")
??biocInstaller
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite("CNTools")
biocLite(pheatmap)
source("https://bioconductor.org/biocLite.R")
biocLite("pheatmap")
source("https://bioconductor.org/biocLite.R")
biocLite("ggbiplot")
install.packages("Hmisc")
install.packages(dplyr)
install.packages("dplyr")
install.packages("tidyR")
y
install.packages(tidyr)
install.packages("tidyr")
install.packages("ggplot2")
install.packages(ggplot)
install.packages("ggplot")
?edgeR()
source("http://bioconductor.org/biocLite.R")
biocLite("baySeq")
library(baySeq)
load("mobData.RData")
head(mobData)
bData.RData")
load("mobData.RData")
load("mobData.RData")
library(synapseClient)
synapseLogin(username = "allawayr", password = "reconcile88&")
library(data.table)
require(parallel)
patient_tumor_number_rna<-function(idlist,quant='cuffLinks'){
if(tolower(quant)=='cufflinks'){
##the PBK ids are missing from table, so need to query annotations
res<-synQuery("select patientID,tissueID,sampleID from entity where parentId=='syn5492805'")
# map<-unique(res)
#from table get generic tumor id
tres<-synTableQuery("SELECT Patient,RnaID,TumorNumber,'RNASeq (Cufflinks)' FROM syn5556216 where RnaID is not NULL")@values
idx<-match(res$entity.id,tres$`RNASeq (Cufflinks)`)
dres<-res[which(!is.na(idx)),]
tres<-tres[idx[which(!is.na(idx))],]
full.map<-cbind(dres,tres)
#map tumors to sample ids
sampleIds<-sapply(idlist,function(x){
y=which(full.map$entity.sampleID==gsub('X','',gsub('.','-',x,fixed=T)))
paste("Patient",full.map$Patient[y],"Tumor",full.map$TumorNumber[y])
})
}else if(tolower(quant)=='featurecounts'){
res<-synTableQuery("SELECT Patient,TumorNumber,RNASeq FROM syn5556216 where RNASeq is not NULL")@values
sampleIds<-sapply(idlist,function(x){
y=which(res$RNASeq==gsub('”','',x))
paste("Patient",res$Patient[y],"Tumor",res$TumorNumber[y])
})
}
return(sampleIds)
}
rna_annotations<-function(){
synq=synapseQuery("select name,id,patientID,tissueID,alternateTumorID from entity where parentId=='syn5493036'")
colnames(synq)<-c('patientId','alternateTumorId','fileName','tissueId','synapseId')
synq=synq[grep('_featureCounts.txt',synq$fileName),]
return(synq)
}
rna_cufflinks_annotations<-function(){
synq=synapseQuery("select sampleID,patientID,tissueID,tissueType,alternateTumorID from entity where parentId=='syn5492805'")
colnames(synq)<-c('tissueType','patientID','sampleID','altTumorID','tissueID','synapseID')
return(synq)
}
rna_bam_annotations<-function(){
synq=synapseQuery("select name,id,patientID,tissueID,alternateTumorID from entity where parentId=='syn4984620'")
colnames(synq)<-c('patientID','alternateTumorId','fileName','tissueId','synapseId')
synq=synq[grep('.bam$',synq$fileName),]
return(synq)
}
##here are the count files analyzed by featureCounts
rna_count_matrix<-function(stored=TRUE,doNorm=FALSE,minCount=0,doLogNorm=FALSE,doVoomNorm=FALSE){
if(!stored){
synq=synapseQuery("select name,id,patientID,tissueID from entity where parentId=='syn5493036'")
synq<-synq[grep("accepted_hits",synq$entity.name),]
synfiles<-sapply(synq$entity.id,synGet)
#now read in alfilel values
allfs<-lapply(synfiles,function(x) read.table(x@filePath,header=T,as.is=T))
names(allfs)<-synq$entity.id
#now get individual genes to create data matrix
hugo.genes<-unique(allfs[[1]][,2])
#now let's get individual counts across patient samples
gene.pat.mat<-sapply(hugo.genes,function(x,allfs){
res<-sapply(names(allfs),function(y){
mat<-allfs[[y]]
sum(mat[which(mat[,2]==x),1])})
names(res)<-names(allfs)
res
},allfs)
colnames(gene.pat.mat)<-hugo.genes
write.table(gene.pat.mat,file='featureCountsByGeneBySample.txt',row.names=T,col.names=T)
sf=File('featureCountsByGeneBySample.txt',parentId='syn4984701')
synStore(sf,used=list(list(name='dermalNFData.R',
url='https://raw.githubusercontent.com/Sage-Bionetworks/dermalNF/master/bin/dermalNFData.R')),
activityName='Create matrix of all counts across samples')
}else{
gene.pat.mat<-read.table(synGet('syn5051784')@filePath)
}
gene.pat.mat<-t(gene.pat.mat)
if(doNorm){
print('Performing size factor adjustment to samples')
require(DESeq2)
samp=data.frame(SampleID=colnames(gene.pat.mat))
cds<- DESeqDataSetFromMatrix(gene.pat.mat,colData=samp,~SampleID)#now collect proteomics data
sizeFac<-estimateSizeFactors(cds)
normCounts<-assay(cds)/sizeFac@colData$sizeFactor
colnames(normCounts)<-colnames(gene.pat.mat)
gene.pat.mat<-normCounts
}else if(doLogNorm){
print("Performing variance stabilizing log2 normalization")
require(DESeq2)
samp=data.frame(SampleID=colnames(gene.pat.mat))
cds<- DESeqDataSetFromMatrix(gene.pat.mat,colData=samp,~SampleID)#now collect proteomics data
vstab=rlog(cds)
varmat<-assay(vstab)
colnames(varmat)<-colnames(gene.pat.mat)
gene.pat.mat<-varmat
minCount=log2(minCount)
}else if(doVoomNorm){
print("Performing VOOM normalization")
library(limma)
ret = voomWithQualityWeights(gene.pat.mat)$E
}
sel.vals=which(apply(gene.pat.mat,1,function(x) all(x>=minCount)))
if(doVoomNorm)
gene.pat.mat=ret
return(gene.pat.mat[sel.vals,])
}
fpkm_annotations<-function(x){
fpkm_files=synQuery("select sampleID,tissueID,patientID from entity where parentId=='syn5492805'")
colnames(fpkm_files)<-c('patient','sample','tissue','entity')
tumNum<-synTableQuery('select Patient,RnaID,TumorNumber from syn5556216 where RNASeq is not NULL')@values
fpkm_files$patient=sapply(fpkm_files$patient,function(x) gsub('CT0+','',x))
fpkm_files$sample=sapply(fpkm_files$sample,function(x) paste('X',gsub("-",'.',x),sep=''))
fpkm_files$TumorNumber=apply(fpkm_files,1,function(x) tumNum$TumorNumber[intersect(which(tumNum$Patient==x[[1]]),which(tumNum$RnaID==gsub('00','',x[[3]])))])
fpkm_files
}
patient_tumor_number_rna<-function(idlist,quant='cuffLinks'){
if(tolower(quant)=='cufflinks'){
##the PBK ids are missing from table, so need to query annotations
res<-synQuery("select patientID,tissueID,sampleID from entity where parentId=='syn5492805'")
# map<-unique(res)
#from table get generic tumor id
tres<-synTableQuery("SELECT Patient,RnaID,TumorNumber,'RNASeq (Cufflinks)' FROM syn5556216 where RnaID is not NULL")@values
idx<-match(res$entity.id,tres$`RNASeq (Cufflinks)`)
dres<-res[which(!is.na(idx)),]
tres<-tres[idx[which(!is.na(idx))],]
full.map<-cbind(dres,tres)
head(tres)
sampleIds<-sapply(idlist,function(x){
y=which(full.map$entity.sampleID==gsub('X','',gsub('.','-',x,fixed=T)))
paste("Patient",full.map$Patient[y],"Tumor",full.map$TumorNumber[y])
})
if(tolower(quant)=='cufflinks'){
##the PBK ids are missing from table, so need to query annotations
res<-synQuery("select patientID,tissueID,sampleID from entity where parentId=='syn5492805'")
# map<-unique(res)
#from table get generic tumor id
tres<-synTableQuery("SELECT Patient,RnaID,TumorNumber,'RNASeq (Cufflinks)' FROM syn5556216 where RnaID is not NULL")@values
idx<-match(res$entity.id,tres$`RNASeq (Cufflinks)`)
dres<-res[which(!is.na(idx)),]
tres<-tres[idx[which(!is.na(idx))],]
full.map<-cbind(dres,tres)
#map tumors to sample ids
sampleIds<-sapply(idlist,function(x){
y=which(full.map$entity.sampleID==gsub('X','',gsub('.','-',x,fixed=T)))
paste("Patient",full.map$Patient[y],"Tumor",full.map$TumorNumber[y])
})
}else if(tolower(quant)=='featurecounts'){
res<-synTableQuery("SELECT Patient,TumorNumber,RNASeq FROM syn5556216 where RNASeq is not NULL")@values
sampleIds<-sapply(idlist,function(x){
y=which(res$RNASeq==gsub('”','',x))
paste("Patient",res$Patient[y],"Tumor",res$TumorNumber[y])
})
}
return(sampleIds)
patient_tumor_number_rna<-function(idlist,quant='cuffLinks'){
if(tolower(quant)=='cufflinks'){
##the PBK ids are missing from table, so need to query annotations
res<-synQuery("select patientID,tissueID,sampleID from entity where parentId=='syn5492805'")
# map<-unique(res)
#from table get generic tumor id
tres<-synTableQuery("SELECT Patient,RnaID,TumorNumber,'RNASeq (Cufflinks)' FROM syn5556216 where RnaID is not NULL")@values
idx<-match(res$entity.id,tres$`RNASeq (Cufflinks)`)
dres<-res[which(!is.na(idx)),]
tres<-tres[idx[which(!is.na(idx))],]
full.map<-cbind(dres,tres)
#map tumors to sample ids
sampleIds<-sapply(idlist,function(x){
y=which(full.map$entity.sampleID==gsub('X','',gsub('.','-',x,fixed=T)))
paste("Patient",full.map$Patient[y],"Tumor",full.map$TumorNumber[y])
})
}else if(tolower(quant)=='featurecounts'){
res<-synTableQuery("SELECT Patient,TumorNumber,RNASeq FROM syn5556216 where RNASeq is not NULL")@values
sampleIds<-sapply(idlist,function(x){
y=which(res$RNASeq==gsub('”','',x))
paste("Patient",res$Patient[y],"Tumor",res$TumorNumber[y])
})
}
return(sampleIds)
}
rna_annotations<-function(){
synq=synapseQuery("select name,id,patientID,tissueID,alternateTumorID from entity where parentId=='syn5493036'")
colnames(synq)<-c('patientId','alternateTumorId','fileName','tissueId','synapseId')
synq=synq[grep('_featureCounts.txt',synq$fileName),]
return(synq)
}
rna_cufflinks_annotations<-function(){
synq=synapseQuery("select sampleID,patientID,tissueID,tissueType,alternateTumorID from entity where parentId=='syn5492805'")
colnames(synq)<-c('tissueType','patientID','sampleID','altTumorID','tissueID','synapseID')
return(synq)
}
source("../../bin/encodeSkinRNASeq.R")
setwd("~/Documents/Repos/dNFLandscape/analysis/2016-11-16")
source("../../bin/encodeSkinRNASeq.R")
source("../../dermalNF/bin/dermalNFData.R")
dermals=rna_fpkm_matrix(byIsoform=FALSE)
#count_matrix(stored=TRUE,doNorm=FALSE,minCount=2,doLogNorm=FALSE,doVoomNorm=TRUE)
skin=getGeneNamesForMatrix(getEncodeSkinMatrix(metric='FPKM',alignment='hg19',doVoomNorm = FALSE))
over=intersect(rownames(dermals),rownames(skin))
##which annotation should we do? Are they really just duplicates of one another?
##step 1 - just combine all
comb=cbind(dermals[over,],skin[over,])
##step 2, remove values below a particular FPKM, let's say 0.1 - for ALL genes
expr<-1:nrow(comb) #which(apply(comb,1,function(x) all(x>0.2)))
expr<-setdiff(expr,expr[union(grep('MIR',rownames(comb)[expr]),grep("SNO",rownames(comb)[expr]))])
##step 3, normalize
require(limma)
comb.norm=data.frame(voomWithQualityWeights(comb[expr,])$E)
comb.norm$Gene=rownames(comb.norm)
require(tidyr)
norm.df<-tidyr::gather(comb.norm,"Sample","Expression",1:(ncol(comb.norm)-1))
mastsig <- c("KIT", "IL1RL1", "FCER1A", "MS4A2", "ENPP3", "HDC", "TPSAB1", "TPSB2", "TPSD1", "CMA1", "CPA3", "CTSG", "HPGD5", "LTC45")
#established mast cell expression signature from http://www.bloodjournal.org/content/123/17/e58.long
mastsig.df <- dplyr::filter(norm.df, Gene %in% mastsig)
mastsig.df <- tidyr::spread(mastsig.df, Gene, Expression)
mastsig.col <- mastsig.df[,-1]
rownames(mastsig.col) <- mastsig.df[,1]
mastsig.m <- as.matrix(mastsig.col)
samples <- rownames(mastsig.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
pheatmap(mastsig.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
mastsig2 <- c("MRGPRX2", "RGS13", "C1orf150", "SIGLEC6", "ERVFRD-1", "SVOPL", "C20orf118", "VWASA")
#new mast cell expression signature from http://www.bloodjournal.org/content/123/17/e58.long, many of these dont appear to be in this data set - perhaps different identfiers?
mastsig2.df <- dplyr::filter(norm.df, Gene %in% mastsig2)
mastsig2.df <- tidyr::spread(mastsig2.df, Gene, Expression)
mastsig2.col <- mastsig2.df[,-1]
rownames(mastsig2.col) <- mastsig2.df[,1]
mastsig2.m <- as.matrix(mastsig2.col)
pheatmap(mastsig2.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
View(dermals)
View(dermals)
which(apply(comb,1,function(x) all(x>0.2)))
expr<-1:nrow(comb)
which(apply(comb,1,function(x) all(x>0.2)))
expr<-setdiff(expr,expr[union(grep('MIR',rownames(comb)[expr]),grep("SNO",rownames(comb)[expr]))])
library(limma)
comb.norm=data.frame(voomWithQualityWeights(comb[expr,])$E)
comb.norm$Gene=rownames(comb.norm)
library(tidyr)
norm.df<-tidyr::gather(comb.norm,"Sample","Expression",1:(ncol(comb.norm)-1))
mastsig <- c("KIT", "IL1RL1", "FCER1A", "MS4A2", "ENPP3", "HDC", "TPSAB1", "TPSB2", "TPSD1", "CMA1", "CPA3", "CTSG", "HPGD5", "LTC45")
mastsig.df <- dplyr::filter(norm.df, Gene %in% mastsig)
mastsig.df <- tidyr::spread(mastsig.df, Gene, Expression)
mastsig.col <- mastsig.df[,-1]
rownames(mastsig.col) <- mastsig.df[,1]
mastsig.m <- as.matrix(mastsig.col)
samples <- rownames(mastsig.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
mastsig2 <- c("MRGPRX2", "RGS13", "C1orf150", "SIGLEC6", "ERVFRD-1", "SVOPL", "C20orf118", "VWASA")
mastsig2.df <- dplyr::filter(norm.df, Gene %in% mastsig2)
mastsig2.df <- tidyr::spread(mastsig2.df, Gene, Expression)
mastsig2.col <- mastsig2.df[,-1]
rownames(mastsig2.col) <- mastsig2.df[,1]
mastsig2.m <- as.matrix(mastsig2.col)
library(pheatmap)
pheatmap(mastsig.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pheatmap(mastsig2.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
View(comb)
View(norm.df)
View(mastsig2.df)
View(norm.df)
View(norm.df)
View(mastsig.m)
mastsig.dermal.df <- dplyr::slice(mastsig.df, 33:66)
mastsig2.dermal.df <- dplyr::slice(mastsig2.df, 33:66)
View(mastsig2.dermal.df)
View(mastsig2.dermal.df)
mastsig.dermal.df <- dplyr::slice(mastsig.df, 34:66)
mastsig2.dermal.df <- dplyr::slice(mastsig2.df, 34:66)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
mastsig.m
mastsig.dermal.df <- as.matrix(dplyr::slice(mastsig.df, 34:66))
mastsig.dermal.m <- as.matrix(dplyr::slice(mastsig.df, 34:66))
mastsig2.dermal.m <- as.matrix(dplyr::slice(mastsig2.df, 34:66))
View(mastsig2.m)
samples <- rownames(mastsig.dermal.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
View(tumorsize.df)
View(tumorsize.m)
View(mastsig2.dermal.m)
View(mastsig2.dermal.df)
View(mastsig.dermal.m)
View(mastsig.col)
View(mastsig.df)
source("../../bin/encodeSkinRNASeq.R")
##get dermal NF data and cluster alongisde
source("../../dermalNF/bin/dermalNFData.R")
dermals=rna_fpkm_matrix(byIsoform=FALSE)
#count_matrix(stored=TRUE,doNorm=FALSE,minCount=2,doLogNorm=FALSE,doVoomNorm=TRUE)
skin=getGeneNamesForMatrix(getEncodeSkinMatrix(metric='FPKM',alignment='hg19',doVoomNorm = FALSE))
over=intersect(rownames(dermals),rownames(skin))
##which annotation should we do? Are they really just duplicates of one another?
##step 1 - just combine all
comb=cbind(dermals[over,],skin[over,])
##step 2, remove values below a particular FPKM, let's say 0.1 - for ALL genes
expr<-1:nrow(comb)
which(apply(comb,1,function(x) all(x>0.2)))
expr<-setdiff(expr,expr[union(grep('MIR',rownames(comb)[expr]),grep("SNO",rownames(comb)[expr]))])
##step 3, normalize
library(limma)
comb.norm=data.frame(voomWithQualityWeights(comb[expr,])$E)
comb.norm$Gene=rownames(comb.norm)
library(tidyr)
norm.df<-tidyr::gather(comb.norm,"Sample","Expression",1:(ncol(comb.norm)-1))
mastsig <- c("KIT", "IL1RL1", "FCER1A", "MS4A2", "ENPP3", "HDC", "TPSAB1", "TPSB2", "TPSD1", "CMA1", "CPA3", "CTSG", "HPGD5", "LTC45")
#established mast cell expression signature from http://www.bloodjournal.org/content/123/17/e58.long
mastsig.df <- dplyr::filter(norm.df, Gene %in% mastsig)
mastsig.df <- tidyr::spread(mastsig.df, Gene, Expression)
mastsig.col <- mastsig.df[,-1]
rownames(mastsig.col) <- mastsig.df[,1]
mastsig.m <- as.matrix(mastsig.col)
mastsig2 <- c("MRGPRX2", "RGS13", "C1orf150", "SIGLEC6", "ERVFRD-1", "SVOPL", "C20orf118", "VWASA")
#new mast cell expression signature from http://www.bloodjournal.org/content/123/17/e58.long, many of these dont appear to be in this data set - perhaps different identfiers?
mastsig2.df <- dplyr::filter(norm.df, Gene %in% mastsig2)
mastsig2.df <- tidyr::spread(mastsig2.df, Gene, Expression)
mastsig2.col <- mastsig2.df[,-1]
rownames(mastsig2.col) <- mastsig2.df[,1]
mastsig2.m <- as.matrix(mastsig2.col)
library(pheatmap)
pheatmap(mastsig.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pheatmap(mastsig2.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
mastsig.dermal.m <- as.matrix(dplyr::slice(mastsig.df, 34:66))
mastsig2.dermal.m <- as.matrix(dplyr::slice(mastsig2.df, 34:66))
samples <- rownames(mastsig.dermal.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
samples <- rownames(mastsig.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
View(mastsig2.dermal.m)
View(mastsig2.dermal.df)
mastsig2.col <- mastsig2.df[,-1]
rownames(mastsig2.col) <- mastsig2.df[,1]
mastsig2.m <- as.matrix(mastsig2.col)
View(mastsig2.m)
View(mastsig.m)
library(pheatmap)
pheatmap(mastsig.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
samples <- rownames(mastsig.dermal.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
samples <- rownames(mastsig.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
library(pheatmap)
pheatmap(mastsig.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
mastsig.dermal.m <- as.matrix(dplyr::slice(mastsig.df, 34:66))
mastsig2.dermal.m <- as.matrix(dplyr::slice(mastsig2.df, 34:66))
samples <- rownames(mastsig.dermal.m)
View(mastsig2.dermal.m)
mastsig.dermal.m <- as.matrix(dplyr::slice(mastsig.m, 34:66))
View(mastsig.col)
mastsig.dermal.df <- dplyr::slice(mastsig.df, 34:66))
mastsig.dermal.col <- mastsig.dermal.df[,-1]
rownames(mastsig.dermal.col) <- mastsig.dermal.df[,1]
mastsig.dermal.m <- as.matrix(mastsig.dermal.col)
mastsig.dermal.df <- dplyr::slice(mastsig.df, 34:66)
mastsig.dermal.col <- mastsig.dermal.df[,-1]
rownames(mastsig.dermal.col) <- mastsig.dermal.df[,1]
mastsig.dermal.m <- as.matrix(mastsig.dermal.col)
View(mastsig.dermal.m)
mastsig <- c("KIT", "IL1RL1", "FCER1A", "MS4A2", "ENPP3", "HDC", "TPSAB1", "TPSB2", "TPSD1", "CMA1", "CPA3", "CTSG", "HPGD5", "LTC45")
mastsig.df <- dplyr::filter(norm.df, Gene %in% mastsig)
mastsig.df <- tidyr::spread(mastsig.df, Gene, Expression)
mastsig.dermal.df <- dplyr::slice(mastsig.df, 34:66)
mastsig.dermal.col <- mastsig.dermal.df[,-1]
rownames(mastsig.dermal.col) <- mastsig.dermal.df[,1]
mastsig.dermal.m <- as.matrix(mastsig.dermal.col)
mastsig2 <- c("MRGPRX2", "RGS13", "C1orf150", "SIGLEC6", "ERVFRD-1", "SVOPL", "C20orf118", "VWASA")
mastsig2.df <- dplyr::filter(norm.df, Gene %in% mastsig2)
mastsig2.df <- tidyr::spread(mastsig2.df, Gene, Expression)
mastsig2.df <- dplyr::filter(norm.df, Gene %in% mastsig2)
mastsig2.df <- tidyr::spread(mastsig2.df, Gene, Expression)
mastsig2.dermal.df <- dplyr::slice(mastsig2.df, 34:66)
mastsig2.dermal.col <- mastsig2.dermal.df[,-1]
rownames(mastsig2.dermal.col) <- mastsig2.dermal.df[,1]
mastsig2.dermal.m <- as.matrix(mastsig2.dermal.col)
samples <- rownames(mastsig.dermal.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
samples <- rownames(mastsig.m)
sizes <- c(15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 33, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
View(skin)
library(pheatmap)
pheatmap(mastsig.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pheatmap(mastsig2.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pheatmap(mastsig.dermal.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pheatmap(mastsig2.dermal.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
View(tumorsize.df)
View(mastsig.dermal.col)
dplyr::right_join(tumorsize.df, mastsig2.dermal.col)
dplyr::bind_cols(tumorsize.df, mastsig2.dermal.col)
mastsig.dermalsize.df <- dplyr::bind_cols(tumorsize.df, mastsig.dermal.col)
mastsig.dermalsize.df <- dplyr::arrange(mastsig.dermalsize.df, "Size")
View(mastsig2.dermal.df)
View(mastsig.dermalsize.df)
?dplyr::bind_cols
row.names(mastsig.dermalsize.df) <- samples
row.names(mastsig.dermalsize.df) <- samples$34:66
row.names(mastsig.dermalsize.df) <- samples[34:66]
View(mastsig.dermalsize.df)
mastsig.dermalsizesort.df <- dplyr::arrange(mastsig.dermalsize.df, "Size")
View(mastsig.dermalsize.df)
mastsig.dermalsizesort.df <- dplyr::arrange(mastsig.dermalsize.df, Size)
View(mastsig.dermalsizesort.df)
mastsig.dermalsizesort.df <- dplyr::arrange(mastsig.dermalsize.df, Size)
mastsig.dermalsizesort.m <- as.matrix(mastsig.dermalsizesort.df)
pheatmap(mastsig.dermalsizesort.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pheatmap(mastsig.dermalsizesort.m, cluster_rows = FALSE, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
View(mastsig.dermalsizesort.m)
mastsig.dermalsizesort.m <- as.matrix(mastsig.dermalsizesort.df[2:10])
View(mastsig.dermalsizesort.m)
pheatmap(mastsig.dermalsizesort.m, cluster_rows = FALSE, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
sortedtumorsize.df <- mastsig.dermalsize.df$[1]
sortedtumorsize.df <- mastsig.dermalsize.df[1]
View(sortedtumorsize.df)
sortedtumorsize.df <- mastsig.dermalsizesort.df[1]
pheatmap(mastsig.dermalsizesort.m, cluster_rows = FALSE, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = sortedtumorsize.df)
View(mastsig.dermalsizesort.m)
View(sortedtumorsize.df)
dimnames.data.frame(sortedtumorsize.df) <- (list(samples, "Size"))
dimnames(sortedtumorsize.df) <- (list(samples, "Size"))
View(tumorsize.df)
mastsig.dermalsize.df <- dplyr::bind_cols(tumorsize.df, mastsig.dermal.col)
row.names(mastsig.dermalsize.df) <- samples[34:66]
mastsig.dermalsizesort.df <- dplyr::arrange(mastsig.dermalsize.df, Size)
tumorsizesort.df <- dplyr::arrange(tumorsize.df, Size)
mastsig.dermalsizesort.m <- as.matrix(mastsig.dermalsizesort.df[2:10])
pheatmap(mastsig.dermalsizesort.m, cluster_rows = FALSE, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsizesort.df)
View(tumorsizesort.df)
View(tumorsize.df)
View(mastsig.dermalsizesort.m)
View(mastsig.dermalsizesort.df)
mastsig.dermalsizesort.df <- dplyr::arrange(mastsig.dermalsize.df, Size)
tumorsizesort.df <- dplyr::arrange(tumorsize.df, Size)
mastsig.dermalsizesort.m <- as.matrix(mastsig.dermalsizesort.df[2:10])
pheatmap(mastsig.dermalsizesort.m, cluster_rows = FALSE, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsizesort.df)
mastsig.dermalsizesort.df <- mastsig.dermalsize.df[order(Size)]
mastsig.dermalsizesort.df <- mastsig.dermalsize.df[order("Size")]
View(mastsig.dermalsizesort.df)
mastsig.dermalsizesort.df <- mastsig.dermalsize.df[order("Size")]
View(mastsig.dermalsizesort.df)
mastsig.dermalsizesort.df <- mastsig.dermalsize.df[order("Size"),]
View(mastsig.dermalsizesort.df)
View(mastsig.dermalsizesort.m)
View(mastsig.dermalsizesort.m)
View(mastsig.dermalsizesort.df)
mastsig.dermalsize.df <- dplyr::bind_cols(tumorsize.df, mastsig.dermal.col)
row.names(mastsig.dermalsize.df) <- samples[34:66]
mastsig.dermalsizesort.df <- mastsig.dermalsize.df[order("Size"),]
tumorsizesort.df <- dplyr::arrange(tumorsize.df, Size)
View(tumorsizesort.df)
tumorsizesort.df <- tumorsize.df[order("Size"),]
tumorsizesort.df <- tumorsize.df[order(tumorsize.df$Size),]
tumorsize.df[order(tumorsize.df$Size),]
pheatmap(mastsig.dermalsizesort.m, cluster_rows = FALSE, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey")

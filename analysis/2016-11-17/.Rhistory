rownames(mast.activation.col) <- mast.activation[,1]
mast.activation.m <- as.matrix(mast.activation.col)
samples <- rownames(mast.activation.m)
pheatmap::pheatmap(mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey",
annotation_row = tumorsize.df, annotation_col = mast.activation.annotation, cluster_cols = FALSE)
pos.reg.mast.apop <- c("FCER1G", "ADAM17", "KITLG") ##http://amigo.geneontology.org/amigo/term/GO:0033024
pos.reg.mast.apop.df <- dplyr::filter(norm.df, Gene %in% pos.reg.mast.apop)
pos.reg.mast.apop.df <- tidyr::spread(pos.reg.mast.apop.df, Gene, Expression)
pos.reg.mast.apop.col <- pos.reg.mast.apop.df[,-1]
rownames(pos.reg.mast.apop.col) <- pos.reg.mast.apop.df[,1]
pos.reg.mast.apop.m <- as.matrix(pos.reg.mast.apop.col)
samples <- rownames(pos.reg.mast.apop.m)
pheatmap::pheatmap(pos.reg.mast.apop.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
pdf("mast.chemotax.pdf")
pheatmap::pheatmap(mast.chemotax.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.(off)
dev.off()
pdf("mast.chemotax.pdf")
pheatmap::pheatmap(mast.chemotax.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##import dNF and ENCODE skin sample gene expression data
source("../2016-11-16/dNF_ENCODE_RNAseq.R")
##all gene sets pulled from Gene Ontology
##first plot heatmap of genes related to mast cell chemotaxis
##import gene set and filter gene expression list to only include these data
mast.chemotaxis <- c("VEGFD", "VEGFC", "PIK3CD", "CCL11", "RAC1", "SWAP70", "PGF", "KIT", "CHGA") ##http://amigo.geneontology.org/amigo/term/GO:0002551
mast.chemotax.df <- dplyr::filter(norm.df, Gene %in% mast.chemotaxis)
mast.chemotax.df <- tidyr::spread(mast.chemotax.df, Gene, Expression)
##set gene names as rownames rather than first row, convert from dataframe to matrix
mast.chemotax.col <- mast.chemotax.df[,-1]
rownames(mast.chemotax.col) <- mast.chemotax.df[,1]
mast.chemotax.m <- as.matrix(mast.chemotax.col)
##make a dataframe to label all tumors with correct size measurement in mm, this is for annotation. set ENCODE samples to 0 as they are not tumors
samples <- rownames(mast.chemotax.m)
sizes <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 66, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
samples <- rownames(mast.chemotax.m)
##print pdf to file of heatmap
pdf("mast.chemotax.pdf")
pheatmap::pheatmap(mast.chemotax.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes invovled in mast cell proliferation
mast.prolif <- c("LYN", "IL3", "KITLG", "KIT") ##http://amigo.geneontology.org/amigo/term/GO:0002551
mast.prolif.df <- dplyr::filter(norm.df, Gene %in% mast.prolif)
mast.prolif.df <- tidyr::spread(mast.prolif.df, Gene, Expression)
mast.prolif.col <- mast.prolif.df[,-1]
rownames(mast.prolif.col) <- mast.prolif.df[,1]
mast.prolif.m <- as.matrix(mast.prolif.col)
samples <- rownames(mast.prolif.m)
pdf("mast.prolif.pdf")
pheatmap::pheatmap(mast.prolif.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes involved in mast cell mediated immune responses
mast.med.immunity <- c("SERPINB9", "GAB2", "IL4", "FCER1G", "RAC2", "FOXF1", "GATA2", "LYN", "PLA2G3", "IL13", "HMOX1", "C12orf4", "IL13RA2", "IL4R", "LAT", "LAT2", "SPON2",
"ADORA2B", "MRGPRX2", "MILR1", "PDPK1", "FGR", "NR4A3", "ZAP70", "UNC13D", "FER", "PIK3CD", "LGALS9", "SNAP23", "STXBP2", "PIK3CG", "CPLX2", "SYK", "VAMP7",
"S100A13", "VAMP8", "CD300A", "FES", "FCER1A", "RABGEF1", "KIT", "BTK", "CD84", "RASGRP1", "SNX4") ##http://amigo.geneontology.org/amigo/term/GO:0002448
mast.med.immunity.df <- dplyr::filter(norm.df, Gene %in% mast.med.immunity)
mast.med.immunity.df <- tidyr::spread(mast.med.immunity.df, Gene, Expression)
mast.med.immunity.col <- mast.med.immunity.df[,-1]
rownames(mast.med.immunity.col) <- mast.med.immunity.df[,1]
mast.med.immunity.m <- as.matrix(mast.med.immunity.col)
samples <- rownames(mast.med.immunity.m)
pdf("mast.med.immunity.pdf")
pheatmap::pheatmap(mast.med.immunity.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes involved in negative regulation of mast cell activation
neg.reg.mast.activation <- c("FOXF1", "HMOX1", "IL13RA3", "FER", "LGALS9", "CD300A", "RABGEF1", "CD84") ##http://amigo.geneontology.org/amigo/term/GO:0033004
neg.reg.mast.activation.df <- dplyr::filter(norm.df, Gene %in% neg.reg.mast.activation)
neg.reg.mast.activation.df <- tidyr::spread(neg.reg.mast.activation.df, Gene, Expression)
neg.reg.mast.activation.col <- neg.reg.mast.activation.df[,-1]
rownames(neg.reg.mast.activation.col) <- neg.reg.mast.activation.df[,1]
neg.reg.mast.activation.m <- as.matrix(neg.reg.mast.activation.col)
samples <- rownames(neg.reg.mast.activation.m)
pdf("neg.reg.mast.activation.pdf")
pheatmap::pheatmap(neg.reg.mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes involved in positive regulation of mast cell activation
pos.reg.mast.activation <- c("GAB2", "IL4", "FCER1G", "GATA2", "IL13", "IL4R", "ADORA2B", "FGR", "ZAP70", "SYK") ##http://amigo.geneontology.org/amigo/term/GO:0033005
pos.reg.mast.activation.df <- dplyr::filter(norm.df, Gene %in% pos.reg.mast.activation)
pos.reg.mast.activation.df <- tidyr::spread(pos.reg.mast.activation.df, Gene, Expression)
pos.reg.mast.activation.col <- pos.reg.mast.activation.df[,-1]
rownames(pos.reg.mast.activation.col) <- pos.reg.mast.activation.df[,1]
pos.reg.mast.activation.m <- as.matrix(pos.reg.mast.activation.col)
samples <- rownames(pos.reg.mast.activation.m)
pdf("pos.reg.mast.activation.pdf")
pheatmap::pheatmap(pos.reg.mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##combine heatmaps for genes causing positive and negative activation of mast cells
mast.activation <- dplyr::bind_cols(pos.reg.mast.activation.df, neg.reg.mast.activation.df[2:8])
##create data frame to enable annotation of genes by direction of mast cell activation (+ = activator, - = repressor)
mast.activation.genes <- colnames(mast.activation[2:18])
mast.activation.direction <- c("+", "+", "+", "+", "+", "+", "+", "+", "+", "+", "-", "-", "-", "-", "-", "-", "-")
mast.activation.annotation <- data.frame(mast.activation.direction, row.names = mast.activation.genes)
mast.activation.col <- mast.activation[,-1]
rownames(mast.activation.col) <- mast.activation[,1]
mast.activation.m <- as.matrix(mast.activation.col)
##generate heatmap, preventing column clustering to so that + genes and - genes are segregated
samples <- rownames(mast.activation.m)
pdf("reg.mast.activation.pdf")
pheatmap::pheatmap(mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey",
annotation_row = tumorsize.df, annotation_col = mast.activation.annotation, cluster_cols = FALSE)
dev.off()
##repeat previous heatmap with genes regulating mast cell apoptosis
pos.reg.mast.apop <- c("FCER1G", "ADAM17", "KITLG") ##http://amigo.geneontology.org/amigo/term/GO:0033024
pos.reg.mast.apop.df <- dplyr::filter(norm.df, Gene %in% pos.reg.mast.apop)
pos.reg.mast.apop.df <- tidyr::spread(pos.reg.mast.apop.df, Gene, Expression)
pos.reg.mast.apop.col <- pos.reg.mast.apop.df[,-1]
rownames(pos.reg.mast.apop.col) <- pos.reg.mast.apop.df[,1]
pos.reg.mast.apop.m <- as.matrix(pos.reg.mast.apop.col)
samples <- rownames(pos.reg.mast.apop.m)
pdf("pos.reg.mast.apop.pdf")
pheatmap::pheatmap(pos.reg.mast.apop.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
pheatmap::pheatmap(mast.chemotax.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
ggsave("mast.chemotax.pdf")
##all gene sets pulled from Gene Ontology
##first plot heatmap of genes related to mast cell chemotaxis
##import gene set and filter gene expression list to only include these data
mast.chemotaxis <- c("VEGFD", "VEGFC", "PIK3CD", "CCL11", "RAC1", "SWAP70", "PGF", "KIT", "CHGA") ##http://amigo.geneontology.org/amigo/term/GO:0002551
mast.chemotax.df <- dplyr::filter(norm.df, Gene %in% mast.chemotaxis)
mast.chemotax.df <- tidyr::spread(mast.chemotax.df, Gene, Expression)
##set gene names as rownames rather than first row, convert from dataframe to matrix
mast.chemotax.col <- mast.chemotax.df[,-1]
rownames(mast.chemotax.col) <- mast.chemotax.df[,1]
mast.chemotax.m <- as.matrix(mast.chemotax.col)
##make a dataframe to label all tumors with correct size measurement in mm, this is for annotation. set ENCODE samples to 0 as they are not tumors
samples <- rownames(mast.chemotax.m)
sizes <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 66, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
samples <- rownames(mast.chemotax.m)
##print pdf to file of heatmap
pdf("mast.chemotax.pdf")
pheatmap::pheatmap(mast.chemotax.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes invovled in mast cell proliferation
mast.prolif <- c("LYN", "IL3", "KITLG", "KIT") ##http://amigo.geneontology.org/amigo/term/GO:0002551
mast.prolif.df <- dplyr::filter(norm.df, Gene %in% mast.prolif)
mast.prolif.df <- tidyr::spread(mast.prolif.df, Gene, Expression)
mast.prolif.col <- mast.prolif.df[,-1]
rownames(mast.prolif.col) <- mast.prolif.df[,1]
mast.prolif.m <- as.matrix(mast.prolif.col)
samples <- rownames(mast.prolif.m)
pdf("mast.prolif.pdf")
pheatmap::pheatmap(mast.prolif.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes involved in mast cell mediated immune responses
mast.med.immunity <- c("SERPINB9", "GAB2", "IL4", "FCER1G", "RAC2", "FOXF1", "GATA2", "LYN", "PLA2G3", "IL13", "HMOX1", "C12orf4", "IL13RA2", "IL4R", "LAT", "LAT2", "SPON2",
"ADORA2B", "MRGPRX2", "MILR1", "PDPK1", "FGR", "NR4A3", "ZAP70", "UNC13D", "FER", "PIK3CD", "LGALS9", "SNAP23", "STXBP2", "PIK3CG", "CPLX2", "SYK", "VAMP7",
"S100A13", "VAMP8", "CD300A", "FES", "FCER1A", "RABGEF1", "KIT", "BTK", "CD84", "RASGRP1", "SNX4") ##http://amigo.geneontology.org/amigo/term/GO:0002448
mast.med.immunity.df <- dplyr::filter(norm.df, Gene %in% mast.med.immunity)
mast.med.immunity.df <- tidyr::spread(mast.med.immunity.df, Gene, Expression)
mast.med.immunity.col <- mast.med.immunity.df[,-1]
rownames(mast.med.immunity.col) <- mast.med.immunity.df[,1]
mast.med.immunity.m <- as.matrix(mast.med.immunity.col)
samples <- rownames(mast.med.immunity.m)
pdf("mast.med.immunity.pdf")
pheatmap::pheatmap(mast.med.immunity.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes involved in negative regulation of mast cell activation
neg.reg.mast.activation <- c("FOXF1", "HMOX1", "IL13RA3", "FER", "LGALS9", "CD300A", "RABGEF1", "CD84") ##http://amigo.geneontology.org/amigo/term/GO:0033004
neg.reg.mast.activation.df <- dplyr::filter(norm.df, Gene %in% neg.reg.mast.activation)
neg.reg.mast.activation.df <- tidyr::spread(neg.reg.mast.activation.df, Gene, Expression)
neg.reg.mast.activation.col <- neg.reg.mast.activation.df[,-1]
rownames(neg.reg.mast.activation.col) <- neg.reg.mast.activation.df[,1]
neg.reg.mast.activation.m <- as.matrix(neg.reg.mast.activation.col)
samples <- rownames(neg.reg.mast.activation.m)
pdf("neg.reg.mast.activation.pdf")
pheatmap::pheatmap(neg.reg.mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##repeat process for genes involved in positive regulation of mast cell activation
pos.reg.mast.activation <- c("GAB2", "IL4", "FCER1G", "GATA2", "IL13", "IL4R", "ADORA2B", "FGR", "ZAP70", "SYK") ##http://amigo.geneontology.org/amigo/term/GO:0033005
pos.reg.mast.activation.df <- dplyr::filter(norm.df, Gene %in% pos.reg.mast.activation)
pos.reg.mast.activation.df <- tidyr::spread(pos.reg.mast.activation.df, Gene, Expression)
pos.reg.mast.activation.col <- pos.reg.mast.activation.df[,-1]
rownames(pos.reg.mast.activation.col) <- pos.reg.mast.activation.df[,1]
pos.reg.mast.activation.m <- as.matrix(pos.reg.mast.activation.col)
samples <- rownames(pos.reg.mast.activation.m)
pdf("pos.reg.mast.activation.pdf")
pheatmap::pheatmap(pos.reg.mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
##combine heatmaps for genes causing positive and negative activation of mast cells
mast.activation <- dplyr::bind_cols(pos.reg.mast.activation.df, neg.reg.mast.activation.df[2:8])
##create data frame to enable annotation of genes by direction of mast cell activation (+ = activator, - = repressor)
mast.activation.genes <- colnames(mast.activation[2:18])
mast.activation.direction <- c("+", "+", "+", "+", "+", "+", "+", "+", "+", "+", "-", "-", "-", "-", "-", "-", "-")
mast.activation.annotation <- data.frame(mast.activation.direction, row.names = mast.activation.genes)
mast.activation.col <- mast.activation[,-1]
rownames(mast.activation.col) <- mast.activation[,1]
mast.activation.m <- as.matrix(mast.activation.col)
##generate heatmap, preventing column clustering to so that + genes and - genes are segregated
samples <- rownames(mast.activation.m)
pdf("reg.mast.activation.pdf")
pheatmap::pheatmap(mast.activation.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey",
annotation_row = tumorsize.df, annotation_col = mast.activation.annotation, cluster_cols = FALSE)
dev.off()
##repeat previous heatmap with genes regulating mast cell apoptosis
pos.reg.mast.apop <- c("FCER1G", "ADAM17", "KITLG") ##http://amigo.geneontology.org/amigo/term/GO:0033024
pos.reg.mast.apop.df <- dplyr::filter(norm.df, Gene %in% pos.reg.mast.apop)
pos.reg.mast.apop.df <- tidyr::spread(pos.reg.mast.apop.df, Gene, Expression)
pos.reg.mast.apop.col <- pos.reg.mast.apop.df[,-1]
rownames(pos.reg.mast.apop.col) <- pos.reg.mast.apop.df[,1]
pos.reg.mast.apop.m <- as.matrix(pos.reg.mast.apop.col)
samples <- rownames(pos.reg.mast.apop.m)
pdf("pos.reg.mast.apop.pdf")
pheatmap::pheatmap(pos.reg.mast.apop.m, cellwidth = 5, cellheight = 5, fontsize = 5, treeheight_col= 40, treeheight_row = 40, border_color = "grey", annotation_row = tumorsize.df)
dev.off()
purity.scores <- read.delim("../estimateScoresWithOtherTumorData.txt")
purity.scores <- read.delim("../2016-11-11/estimateScoresWithOtherTumorData.txt")
purity.scores <- read.delim("../2016-11-16/estimateScoresWithOtherTumorData.txt")
purity.scores$Patient <- as.factor(purity.scores$Patient)
library(ggplot2)
source("../2016-11-16/dNF_ENCODE_RNAseq.R")
mast.chemotaxis <- c("VEGFD", "VEGFC", "PIK3CD", "CCL11", "RAC1", "SWAP70", "PGF", "KIT", "CHGA") ##http://amigo.geneontology.org/amigo/term/GO:0002551
mast.chemotax.df <- dplyr::filter(norm.df, Gene %in% mast.chemotaxis)
mast.chemotax.df <- dplyr::filter(norm.df, Gene$"SPON2")
mast.chemotax.df <- dplyr::filter(norm.df, Gene$SPON2)
mast.chemotax.df <- dplyr::filter(norm.df, Gene %in% mast.chemotaxis)
View(mast.chemotax.df)
mast.chemotaxis <- c("SPON2")
mast.chemotax.df <- dplyr::filter(norm.df, Gene %in% mast.chemotaxis)
View(mast.chemotax.df)
##make a dataframe to label all tumors with correct size measurement in mm, this is for annotation. set ENCODE samples to 0 as they are not tumors
samples <- rownames(mast.chemotax.m)
sizes <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,13,14,5,7,11,16,20,15,8,5,10,7,8,6,15,10,15,13,10,10,13,10,12,5,11,20,10,3,18,12,20,13)
tumorsize.m <- matrix(data = sizes, nrow = 66, ncol = 1, dimnames = (list(samples, "Size")))
tumorsize.df <- as.data.frame(tumorsize.m)
source("../2016-11-17.dNF_ENCODE_GO_Mast.R")
source("../2016-11-17/dNF_ENCODE_GO_Mast.R")
View(tumorsize.df)
SPON2 <- c("SPON2")
SPON2.df <- dplyr::filter(norm.df, Gene %in% SPON2)
View(SPON2.df)
View(tumorsize.m)
View(SPON2.df)
tumorsize.df$Sample <- rownames(tumorsize.df)
View(tumorsize.df)
dplyr::left_join(SPON2.df, tumorsize.df, by = "Sample")
SPON2.df <- dplyr::left_join(SPON2.df, tumorsize.df, by = "Sample")
View(SPON2.df)
SPON2.df <- slice(SPON2.df, 1:33)
SPON2.df <- dplyr::slice(SPON2.df, 1:33)
SPON2.df <- dplyr::left_join(SPON2.df, tumorsize.df, by = "Sample")
SPON2.df <- dplyr::slice(SPON2.df, 1:33)
library(ggplot2)
SPON2.plot <- qplot(SPON2.df$Gene, SPON2.df$Size)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
SPON2.plot <- qplot(SPON2.df$Gene, SPON2.df$Size)
View(SPON2.df)
View(tumorsize.df)
View(tumorsize.df)
View(SPON2.df)
View(SPON2.df)
SPON2.plot <- qplot(SPON2.df$Gene, SPON2.df$Size.x)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size.x)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size.x)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x^2, size = 1)
SPON2.plot + stat_smooth(method = "loess", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size.x)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ log(x), size = 1)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ poly(x, 2), size = 1)
SPON2.plot + stat_smooth(method = "glm", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "rlm", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "gam", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "loess", span = "10", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "loess", span = "1", formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "loess", span = 1, formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "loess", span = 10, formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "loess", span = 0.2, formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "loess", span = 0.5, formula = y ~ x, size = 1)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
##first plot heatmap of genes related to mast cell chemotaxis
##import gene set and filter gene expression list to only include these data
FCER1G <- c("FCER1G")
FCER1G.df <- dplyr::filter(norm.df, Gene %in% FCER1G)
tumorsize.df$Sample <- rownames(tumorsize.df)
FCER1G.df <- dplyr::left_join(FCER1G.df, tumorsize.df, by = "Sample")
FCER1G.df <- dplyr::slice(FCER1G.df, 1:33)
library(ggplot2)
FCER1G.plot <- qplot(FCER1G.df$Expression, FCER1G.df$Size.x)
FCER1G.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
library(ggplot2)
FCER1G <- c("FCER1G")
FCER1G.df <- dplyr::filter(norm.df, Gene %in% FCER1G)
tumorsize.df$Sample <- rownames(tumorsize.df)
FCER1G.df <- dplyr::left_join(FCER1G.df, tumorsize.df, by = "Sample")
FCER1G.df <- dplyr::slice(FCER1G.df, 1:33)
library(ggplot2)
FCER1G.plot <- qplot(FCER1G.df$Expression, FCER1G.df$Size.x)
FCER1G.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
View(FCER1G.df)
FCER1G.plot <- qplot(FCER1G.df$Expression, FCER1G.df$Size)
FCER1G.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
##plot FCER1A against tumor size
FCER1A <- c("FCER1A")
FCER1A.df <- dplyr::filter(norm.df, Gene %in% FCER1A)
tumorsize.df$Sample <- rownames(tumorsize.df)
FCER1A.df <- dplyr::left_join(FCER1A.df, tumorsize.df, by = "Sample")
FCER1A.df <- dplyr::slice(FCER1A.df, 1:33)
library(ggplot2)
FCER1A.plot <- qplot(FCER1A.df$Expression, FCER1A.df$Size)
FCER1A.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
##plot UNC13D against tumor size
UNC13D <- c("UNC13D")
UNC13D.df <- dplyr::filter(norm.df, Gene %in% UNC13D)
tumorsize.df$Sample <- rownames(tumorsize.df)
UNC13D.df <- dplyr::left_join(UNC13D.df, tumorsize.df, by = "Sample")
UNC13D.df <- dplyr::slice(UNC13D.df, 1:33)
library(ggplot2)
UNC13D.plot <- qplot(UNC13D.df$Expression, UNC13D.df$Size)
UNC13D.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
##plot UNC13D against tumor size
KITLG <- c("KITLG")
KITLG.df <- dplyr::filter(norm.df, Gene %in% KITLG)
tumorsize.df$Sample <- rownames(tumorsize.df)
KITLG.df <- dplyr::left_join(KITLG.df, tumorsize.df, by = "Sample")
KITLG.df <- dplyr::slice(KITLG.df, 1:33)
library(ggplot2)
KITLG.plot <- qplot(KITLG.df$Expression, KITLG.df$Size)
KITLG.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
FGR <- c("FGR")
FGR.df <- dplyr::filter(norm.df, Gene %in% FGR)
tumorsize.df$Sample <- rownames(tumorsize.df)
FGR.df <- dplyr::left_join(FGR.df, tumorsize.df, by = "Sample")
FGR.df <- dplyr::slice(FGR.df, 1:33)
library(ggplot2)
FGR.plot <- qplot(FGR.df$Expression, FGR.df$Size)
FGR.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
##plot KITLG against tumor size
C3 <- c("C3")
C3.df <- dplyr::filter(norm.df, Gene %in% C3)
tumorsize.df$Sample <- rownames(tumorsize.df)
C3.df <- dplyr::left_join(C3.df, tumorsize.df, by = "Sample")
C3.df <- dplyr::slice(C3.df, 1:33)
library(ggplot2)
C3.plot <- qplot(C3.df$Expression, C3.df$Size)
C3.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
##plot FYN against tumor size
FYN <- c("FYN")
FYN.df <- dplyr::filter(norm.df, Gene %in% FYN)
tumorsize.df$Sample <- rownames(tumorsize.df)
FYN.df <- dplyr::left_join(FYN.df, tumorsize.df, by = "Sample")
FYN.df <- dplyr::slice(FYN.df, 1:33)
library(ggplot2)
FYN.plot <- qplot(FYN.df$Expression, FYN.df$Size)
FYN.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
View(SPON2.df)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size.x)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("SPON2.pdf")
##SPON2 expression appears to correlate with tumor size in heatmaps - let's test this
##import dNF and ENCODE skin sample gene expression data
source("../2016-11-17/dNF_ENCODE_GO_Mast.R")
##all gene sets pulled from Gene Ontology
##plot SPON2 expression against tumor size
SPON2 <- c("SPON2")
SPON2.df <- dplyr::filter(norm.df, Gene %in% SPON2)
tumorsize.df$Sample <- rownames(tumorsize.df)
SPON2.df <- dplyr::left_join(SPON2.df, tumorsize.df, by = "Sample")
SPON2.df <- dplyr::slice(SPON2.df, 1:33)
library(ggplot2)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size.x)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("SPON2.pdf")
##plot FCER1G against tumor size
FCER1G <- c("FCER1G")
FCER1G.df <- dplyr::filter(norm.df, Gene %in% FCER1G)
tumorsize.df$Sample <- rownames(tumorsize.df)
FCER1G.df <- dplyr::left_join(FCER1G.df, tumorsize.df, by = "Sample")
FCER1G.df <- dplyr::slice(FCER1G.df, 1:33)
library(ggplot2)
FCER1G.plot <- qplot(FCER1G.df$Expression, FCER1G.df$Size)
FCER1G.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("FCER1G.pdf")
##plot FCER1A against tumor size
FCER1A <- c("FCER1A")
FCER1A.df <- dplyr::filter(norm.df, Gene %in% FCER1A)
tumorsize.df$Sample <- rownames(tumorsize.df)
FCER1A.df <- dplyr::left_join(FCER1A.df, tumorsize.df, by = "Sample")
FCER1A.df <- dplyr::slice(FCER1A.df, 1:33)
library(ggplot2)
FCER1A.plot <- qplot(FCER1A.df$Expression, FCER1A.df$Size)
FCER1A.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("FCER1A.pdf")
##plot FGR against tumor size
FGR <- c("FGR")
FGR.df <- dplyr::filter(norm.df, Gene %in% FGR)
tumorsize.df$Sample <- rownames(tumorsize.df)
FGR.df <- dplyr::left_join(FGR.df, tumorsize.df, by = "Sample")
FGR.df <- dplyr::slice(FGR.df, 1:33)
library(ggplot2)
FGR.plot <- qplot(FGR.df$Expression, FGR.df$Size)
FGR.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("FGR.pdf")
##plot UNC13D against tumor size
UNC13D <- c("UNC13D")
UNC13D.df <- dplyr::filter(norm.df, Gene %in% UNC13D)
tumorsize.df$Sample <- rownames(tumorsize.df)
UNC13D.df <- dplyr::left_join(UNC13D.df, tumorsize.df, by = "Sample")
UNC13D.df <- dplyr::slice(UNC13D.df, 1:33)
library(ggplot2)
UNC13D.plot <- qplot(UNC13D.df$Expression, UNC13D.df$Size)
UNC13D.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("UNC130.pdf")
##plot KITLG against tumor size
KITLG <- c("KITLG")
KITLG.df <- dplyr::filter(norm.df, Gene %in% KITLG)
tumorsize.df$Sample <- rownames(tumorsize.df)
KITLG.df <- dplyr::left_join(KITLG.df, tumorsize.df, by = "Sample")
KITLG.df <- dplyr::slice(KITLG.df, 1:33)
library(ggplot2)
KITLG.plot <- qplot(KITLG.df$Expression, KITLG.df$Size)
KITLG.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("KITLG.pdf")
##plot C3 against tumor size
C3 <- c("C3")
C3.df <- dplyr::filter(norm.df, Gene %in% C3)
tumorsize.df$Sample <- rownames(tumorsize.df)
C3.df <- dplyr::left_join(C3.df, tumorsize.df, by = "Sample")
C3.df <- dplyr::slice(C3.df, 1:33)
library(ggplot2)
C3.plot <- qplot(C3.df$Expression, C3.df$Size)
C3.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("C3.pdf")
##plot FYN against tumor size
FYN <- c("FYN")
FYN.df <- dplyr::filter(norm.df, Gene %in% FYN)
tumorsize.df$Sample <- rownames(tumorsize.df)
FYN.df <- dplyr::left_join(FYN.df, tumorsize.df, by = "Sample")
FYN.df <- dplyr::slice(FYN.df, 1:33)
library(ggplot2)
FYN.plot <- qplot(FYN.df$Expression, FYN.df$Size)
FYN.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("FYN.pdf")
##plot NGF against tumor size
NGF <- c("NGF")
NGF.df <- dplyr::filter(norm.df, Gene %in% NGF)
tumorsize.df$Sample <- rownames(tumorsize.df)
NGF.df <- dplyr::left_join(NGF.df, tumorsize.df, by = "Sample")
NGF.df <- dplyr::slice(NGF.df, 1:33)
library(ggplot2)
NGF.plot <- qplot(NGF.df$Expression, NGF.df$Size)
NGF.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("NGF.pdf")
source("../../bin/wgsAnalysis.R")
source("../../bin/geneSampleMatrix.R")
this.script='https://raw.githubusercontent.com/sgosline/dNFLandscape/master/analysis/2016-11-15/mutationScoreTests.R'
p05='syn6097853'
p1='syn6099307'
som.vars<-somaticGeneSampleMatrix()
germ.vars<-germlineGeneSampleMatrix()
#som.vars.df<-getMutsAcrossGenes(expr.gene.muts1,effect=c("HIGH"),germLine=c("Germline"),
#                                         som=c("LikelySomatic",'StrongSomatic'))
##re-plot somatic mutations with improved cutoffs
genes.with.more.vars<-names(which(apply(som.vars,1,function(x) length(which(x)))>2))
vars.per.gene<-rowSums(som.vars[genes.with.more.vars,]*1)
genes.with.more.vars<-genes.with.more.vars[order(vars.per.gene)]
samp.mut.burden<-colSums(som.vars*1)
genes.mutated<-rowSums(som.vars*1)
pheatmap(som.vars[genes.with.more.vars,]*1,cellwidth = 10,cellheight=10,cluster_cols = F,
cluster_rows=F,annotation_col = data.frame(MutationalBurden=samp.mut.burden),
annotation_row=data.frame(TimesMutated=genes.mutated),
main='Samples and genes with >2 mutations',file='genesWithMoreThan2Muts.png')
##let's plot top 10?
full.stats<-sapply(rev(genes.with.more.vars)[1:10],function(gene){
try(stats<-getMutationStatsForGene(expr.gene.muts1,gene=gene,doPlot=TRUE,effect=c("HIGH"),prefix='p1'))})
setwd("~/Documents/dNFLandscape/analysis/2016-11-15")
source("../../bin/geneSampleMatrix.R")
source("../../analysis/2016-09-20/geneSampleMatrix.R")
this.script='https://raw.githubusercontent.com/sgosline/dNFLandscape/master/analysis/2016-11-15/mutationScoreTests.R'
p05='syn6097853'
p1='syn6099307'
som.vars<-somaticGeneSampleMatrix()
germ.vars<-germlineGeneSampleMatrix()
genes.with.more.vars<-names(which(apply(som.vars,1,function(x) length(which(x)))>2))
vars.per.gene<-rowSums(som.vars[genes.with.more.vars,]*1)
genes.with.more.vars<-genes.with.more.vars[order(vars.per.gene)]
samp.mut.burden<-colSums(som.vars*1)
genes.mutated<-rowSums(som.vars*1)
pheatmap(som.vars[genes.with.more.vars,]*1,cellwidth = 10,cellheight=10,cluster_cols = F,
cluster_rows=F,annotation_col = data.frame(MutationalBurden=samp.mut.burden),
annotation_row=data.frame(TimesMutated=genes.mutated),
main='Samples and genes with >2 mutations',file='genesWithMoreThan2Muts.png')
full.stats<-sapply(rev(genes.with.more.vars)[1:10],function(gene){
try(stats<-getMutationStatsForGene(expr.gene.muts1,gene=gene,doPlot=TRUE,effect=c("HIGH"),prefix='p1'))})
pngfiles=list.files('.')[grep('png',list.files('.'))]
setwd("~/Documents/Repos/dNFLandscape/analysis/2016-11-17")
##plot SPON2 expression against tumor size
SPON2 <- c("SPON2")
SPON2.df <- dplyr::filter(norm.df, Gene %in% SPON2)
tumorsize.df$Sample <- rownames(tumorsize.df)
SPON2.df <- dplyr::left_join(SPON2.df, tumorsize.df, by = "Sample")
SPON2.df <- dplyr::slice(SPON2.df, 1:33)
library(ggplot2)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size.x)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("SPON2.pdf")
##plot SPON2 expression against tumor size
SPON2 <- c("SPON2")
SPON2.df <- dplyr::filter(norm.df, Gene %in% SPON2)
tumorsize.df$Sample <- rownames(tumorsize.df)
SPON2.df <- dplyr::left_join(SPON2.df, tumorsize.df, by = "Sample")
SPON2.df <- dplyr::slice(SPON2.df, 1:33)
library(ggplot2)
SPON2.plot <- qplot(SPON2.df$Expression, SPON2.df$Size)
SPON2.plot + stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggsave("SPON2.pdf")
